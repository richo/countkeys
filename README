===============================================================================
 countkeys - a GNU/Linux keycounter that works!
===============================================================================

  0. Licence
  1. Description
  2. Installation
  3. Usage how-to
  4. Further information

===============================================================================


+------------------------------------------------
 0. Licence
===============================================================================
countkeys is dual licensed under the terms of either GNU GPLv3 or later, or 
WTFPLv2 or later. It is entirely your choice! See COPYING for further 
licensing information.


+------------------------------------------------
 1. Description
===============================================================================
countkeys is a linux keystroke counter. It simply (and I mean simply- it
doesn't do anything too bright as far as working out what a keyboard looks
like) keeps track of how many keys you press in a session and then lets you
know


+------------------------------------------------
 2. Installation
===============================================================================
Provided your GNU/Linux distribution doesn't include countkeys package in its
repositories, manual installation of countkeys from source is as easy as:

 $ git clone git@github.com:richoH/countkeys.git  # to extract the countkeys archive
 
 $ cd countkeys/build     # move to build directory to build there
 $ ../configure               # invoke configure from parent directory
 $ make                       # make compiles what it needs to compile
 ( become superâ†™user now )    # you need root to install in system dir
 # make install               # installs binaries, manuals and scripts

That's it. If everything went through fine (as it mostly should, I think), you
can probably skip ahead to the next section now.

To ever uninstall countkeys, remove accompanying scripts and manuals, issue

 # make uninstall    # in the same countkeys-0.1.0/build dir from before

To install the binaries in path other than /usr/local/bin, use configure with
--prefix switch, for example:

 $ ../configure --prefix=/usr

Along with other standard configure options, you can also use:

 $ ../configure --enable-evdev-path=PATH

to have countkeys look for input event devices in PATH ( $(PATH)/eventX ) instead
of preconfigured default /dev/input (/dev/input/eventX), and

 $ ../configure --enable-evdev=DEV

to have countkeys define static event device DEV (i.e. /dev/input/eventX) instead
of looking for it in default /dev/input path or custom evdev-path.

The input event device we are referring to, here, is the kernel event interface
echoing keyboard events. If using either of these two --enable-evdev*
switches, make sure you provided correct PATH/DEV.

A copy of these instructions is in the accompanying INSTALL file.


+------------------------------------------------
 3. Usage how-to
===============================================================================

countkeys is simple. You can either invoke it directly or by typing full command 
line.

Default log file is /var/log/countkeys.log and is not readable by others.

I suggest you first test the program manually with

 $ touch test.log
 $ countkeys --start --output test.log

and in the other terminal follow it with

 $ tail --follow test.log

and see if the pressed keys match to those noted.

countkeys acts as a daemon, and you stop the running logger process with

 $ countkeys --kill

For more information about countkeys log file format, countkeys keymap format, and
command line arguments, read the application manual,

 $ man countkeys


+------------------------------------------------
 4. Further information
===============================================================================

Read the man page.

Report any bugs and request reasonable features on the issues list page

 https://github.com/richoH/countkeys/issues .

Always provide descriptively keyworded summary and description.

You are more than welcome to implement unreasonable features yourself, as well
as hack the program to your liking.

~
